{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Creates an ElasticBeanstalk PHP Sample Application stack",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": { "default": "ElasticBeanstalk Configuration" },
          "Parameters": [
            "AppName",
            "Environment",
            "VpcId",
            "EC2Subnets",
            "ELBSubnets",
            "ELBScheme",
            "ELBCrossAZ",
            "ListenerProtocol",
            "AssociatePublicIpAddress",
            "MinSize",
            "MaxSize",
            "InstancePort",
            "InstanceType",
            "KeyPair",
            "StackSource",
            "ApplicationHealthcheckUrl",
            "S3Bucket",
            "S3AppPath",
            "SSHSourceRestriction"
          ]
        }
      ],
      "ParameterLabels": {
        "Environment": { "default": "Which environment will host this EBS app? (used in various tags and resource names)" }
      }
    }
  },
  "Parameters": {
    "AppName": {
      "Type": "String",
      "Default": "PHP-Sample-App"
    },
    "ApplicationHealthcheckUrl": {
      "Type": "String",
      "Description": "App healthcheck",
      "Default": "/index.php"
    },
    "AssociatePublicIpAddress": {
      "Type": "String",
      "Description": "Specifies whether to launch instances in your VPC with public IP addresses",
      "AllowedValues": [ "true", "false" ],
      "Default": "true"
    },
    "EC2Subnets": {
      "Type": "String",
      "Description": "Pair of subnet IDs for hosting EC2 instances, ex. subnet-12345678,subnet-87654321",
      "ConstraintDescription": "Valid id format = subnet-xyxyxyxy. Specify one from each AZ"
    },
    "ELBSubnets": {
      "Type": "String",
      "Description": "Pair of subnet IDs for hosting a cross-AZ ELB, ex. subnet-12345678,subnet-87654321",
      "ConstraintDescription": "Valid id format = subnet-xyxyxyxy. Specify one from each AZ"
    },
    "ELBScheme": {
      "Type": "String",
      "Description": "ELB type",
      "AllowedValues": [ "internal", "internet-facing" ],
      "Default": "internet-facing"
    },
    "ELBCrossAZ": {
      "Type": "String",
      "Description": "Multi-AZ ELB",
      "AllowedValues": [ "true", "false" ],
      "Default": "true"
    },
    "Environment": {
      "Type": "String",
      "Description": "Used for miscellaneous object names and tags",
      "AllowedValues": [ "Dev", "Staging", "Prod" ],
      "Default": "Dev"
    },
    "InstancePort": {
      "Type": "String",
      "Description": "EC2 instances listen on this port",
      "Default": "80"
    },
    "InstanceType": {
      "Type": "String",
      "Description": "EC2 instance type",
      "AllowedValues": [ "t2.micro", "t2.small", "t2.medium" ],
      "Default": "t2.micro"
    },
    "KeyPair": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "Existing EC2 key pair for instances",
      "Default": "mykeypair"
    },
    "ListenerProtocol": {
      "Type": "String",
      "Description": "Listener protocol",
      "Default": "HTTP"
    },
    "MaxSize": {
      "Type": "String",
      "Description": "ASG maximum size",
      "Default": "4"
    },
    "MinSize": {
      "Type": "String",
      "Description": "ASG minimum size",
      "Default": "2"
    },
    "S3AppPath": {
      "Type": "String",
      "Description": "S3 key pointing to sample app code",
      "Default": "ebs_sample_app/phpsample.zip"
    },
    "S3Bucket": {
      "Type": "String",
      "Description": "S3Bucket containing sample app code",
      "Default": "mybucketname"
    },
    "SSHSourceRestriction": {
      "Type": "String",
      "Description": "SSH access to EC2 instances",
      "Default": "tcp, 22, 22, 76.1.2.3/32"
    },
    "StackSource": {
      "Type": "String",
      "Description": "EBS Application name",
      "Default": "64bit Amazon Linux 2016.09 v2.3.0 running PHP 5.5"
    },
    "VpcId": {
        "Type": "String",
        "Description": "VPC ID",
        "MinLength": "12",
        "MaxLength": "12",
        "ConstraintDescription": "Valid VPC identifier form, vpc-12345678"
    }
  },
  "Resources": {
    "SampleApp": {
      "Type": "AWS::ElasticBeanstalk::Application",
      "Properties": {
        "ApplicationName": { "Ref": "AppName" },
        "Description": "Sample ElasticBeanstalk PHP App"
      }
    },
    "SampleAppV1": {
      "Type": "AWS::ElasticBeanstalk::ApplicationVersion",
      "Properties": {
        "ApplicationName": { "Ref": "SampleApp" },
        "Description": "StartingVersion",
        "SourceBundle": {
          "S3Bucket": { "Ref": "S3Bucket" },
          "S3Key": { "Ref": "S3AppPath" }
        }
      }
    },
    "SampleBeanstalkInstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "SampleBeanstalkInstanceRolePolicy",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:CreateBucket",
                    "s3:ListBucket*",
                    "s3:GetBucket*",
                    "s3:PutBucketPolicy",
                    "s3:DeleteObject*",
                    "s3:GetObject*",
                    "s3:PutObject*"
                  ],
                  "Resource": [
                    "arn:aws:s3:::elasticbeanstalk-*"
                  ]
                },
                {
                  "Action": [
                    "s3:GetBucket*",
                    "s3:GetObject*",
                    "s3:ListBucket*",
                    "s3:PutObject*"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "S3Bucket" }, "," ]],
                    "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "S3Bucket" }, "/*" ]]
                  }
                },
                {
                  "Action": [
                    "sqs:ChangeMessageVisibility",
                    "sqs:DeleteMessage",
                    "sqs:ReceiveMessage",
                    "sqs:SendMessage"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [ "", [ "arn:aws:sqs:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":*" ]]
                  }
                },
                {
                  "Action": [
                    "cloudwatch:PutMetricData",
                    "ec2:DescribeTags"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "elasticbeanstalk:*"
                  ],
                  "Resource": {
                    "Fn::Join": [ "", [ "arn:aws:elasticbeanstalk:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":application/*" ]],
                    "Fn::Join": [ "", [ "arn:aws:elasticbeanstalk:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":applicationversion/*" ]],
                    "Fn::Join": [ "", [ "arn:aws:elasticbeanstalk:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":configurationtemplate/*" ]],
                    "Fn::Join": [ "", [ "arn:aws:elasticbeanstalk:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":environment/*" ]],
                    "Fn::Join": [ "", [ "arn:aws:elasticbeanstalk:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":template/*" ]]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "SampleBeanstalkInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [ { "Ref": "SampleBeanstalkInstanceRole" } ]
      }
    },
    "SampleBeanstalkConfigTemplate": {
      "Type": "AWS::ElasticBeanstalk::ConfigurationTemplate",
      "Properties": {
        "ApplicationName": { "Ref": "SampleApp" },
        "Description": "Default Config",
        "SolutionStackName": { "Ref": "StackSource" },
        "OptionSettings": [
          {
            "Namespace": "aws:autoscaling:asg",
            "OptionName": "MinSize",
            "Value": { "Ref": "MinSize" }
          },
          {
            "Namespace": "aws:autoscaling:asg",
            "OptionName": "MaxSize",
            "Value": { "Ref": "MaxSize" }
          },
          {
            "Namespace": "aws:autoscaling:launchconfiguration",
            "OptionName": "IamInstanceProfile",
            "Value": {"Fn::GetAtt": [ "SampleBeanstalkInstanceProfile", "Arn" ]}
          },
          {
            "Namespace": "aws:autoscaling:launchconfiguration",
            "OptionName": "InstanceType",
            "Value": { "Ref": "InstanceType" }
          },
          {
            "Namespace": "aws:autoscaling:launchconfiguration",
            "OptionName": "EC2KeyName",
            "Value": { "Ref": "KeyPair" }
          },
          {
            "Namespace": "aws:autoscaling:launchconfiguration",
            "OptionName": "SSHSourceRestriction",
            "Value": { "Ref": "SSHSourceRestriction" }
          },
          {
            "Namespace": "aws:ec2:vpc",
            "OptionName": "VPCId",
            "Value": { "Ref": "VpcId" }
          },
          {
            "Namespace": "aws:ec2:vpc",
            "OptionName": "Subnets",
            "Value": { "Ref": "EC2Subnets" }
          },
          {
            "Namespace": "aws:ec2:vpc",
            "OptionName": "ELBSubnets",
            "Value": { "Ref": "ELBSubnets" }
          },
          {
            "Namespace": "aws:ec2:vpc",
            "OptionName": "ELBScheme",
            "Value": { "Ref": "ELBScheme" }
          },
          {
            "Namespace": "aws:ec2:vpc",
            "OptionName": "AssociatePublicIpAddress",
            "Value": { "Ref": "AssociatePublicIpAddress" }
          },
          {
            "Namespace": "aws:elb:listener:80",
            "OptionName": "InstancePort",
            "Value": { "Ref": "InstancePort" }
          },
          {
            "Namespace": "aws:elb:listener:80",
            "OptionName": "ListenerProtocol",
            "Value": { "Ref": "ListenerProtocol" }
          },
          {
            "Namespace": "aws:elb:loadbalancer",
            "OptionName": "CrossZone",
            "Value": { "Ref": "ELBCrossAZ" }
          },
          {
            "Namespace": "aws:elasticbeanstalk:application",
            "OptionName": "Application Healthcheck URL",
            "Value": { "Ref": "ApplicationHealthcheckUrl" }
          },
          {
            "Namespace": "aws:elasticbeanstalk:healthreporting:system",
            "OptionName": "SystemType",
            "Value": "enhanced"
          },
          {
            "Namespace": "aws:elasticbeanstalk:environment",
            "OptionName": "ServiceRole",
            "Value": "aws-elasticbeanstalk-service-role"
          }
        ]
      }
    },
    "SampleAppEnv": {
      "Type": "AWS::ElasticBeanstalk::Environment",
      "Properties": {
        "ApplicationName": { "Ref": "SampleApp" },
        "Description": "Demo PHP app for ElasticBeanstalk",
        "TemplateName": { "Ref": "SampleBeanstalkConfigTemplate" },
        "EnvironmentName": {
          "Fn::Join": [ "", [ "EbsSampleApp-", { "Ref": "Environment" } ] ]
        },
        "CNAMEPrefix": {
          "Fn::Join": [ "", [ "ebs-sample-app-", { "Ref": "Environment" } ] ]
        },
        "VersionLabel": { "Ref": "SampleAppV1" },
        "Tags": [
          {
            "Key": "Environment",
            "Value": { "Ref": "Environment" }
          }
        ]
      }
    }
  },
  "Outputs": {
    "EbsEndpointUrl": {
      "Description": "URL of the Elastic Beanstalk Environment",
      "Value": { "Fn::GetAtt": ["SampleAppEnv", "EndpointURL"] }
    }
  }
}
